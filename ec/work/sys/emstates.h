
#define  EM_STATES_START		0x27
#define  NO_GLOBAL_STATES		0x27

/**** E & M states ****/
/**-----------------------------------------------------------------------**/
#if (( (defined EM_INSTALLED) || (defined CAS1_INSTALLED) ) && (defined CALL_PROCESSOR))

#define EM_PULSE_STATES_START	EM_STATES_START

#if ( (defined EM_PULSE_SIGNALING) || (defined CAS1_INSTALLED) )
#define  AWAIT_ACK		EM_PULSE_STATES_START
#define  ACK			(EM_PULSE_STATES_START + 1)
#define  OGT_BLOCK		(EM_PULSE_STATES_START + 2)
#define  ICT_BLOCK		(EM_PULSE_STATES_START + 3)
#define  AWAIT_SEIZE		(EM_PULSE_STATES_START + 4)
#define  GAURD			(EM_PULSE_STATES_START + 5)
#define  ANSWER 		(EM_PULSE_STATES_START + 6)
#define  AWAIT_DGT		(EM_PULSE_STATES_START + 7)
#define  AWAIT_SEIZE_ACK	(EM_PULSE_STATES_START + 8)
#define  IC_SGNL_BLOCK		(EM_PULSE_STATES_START + 9)
#define  CONGESTION		(EM_PULSE_STATES_START + 0x0a)
#define  STD_CONNECT		(EM_PULSE_STATES_START + 0x0b)
#define  CLR_BACK		(EM_PULSE_STATES_START + 0x0c)
#define  TALK			(EM_PULSE_STATES_START + 0x0d)
#define  METERING		(EM_PULSE_STATES_START + 0x0e)
#define  OPR_AWAIT_ACK_EM	(EM_PULSE_STATES_START + 0x0f)
#define  OPR_ACK_EM		(EM_PULSE_STATES_START + 0x10)
#define  OPR_ANSWER_EM		(EM_PULSE_STATES_START + 0x11)
#define  OPR_TALK_EM		(EM_PULSE_STATES_START + 0x12)
#define  OPR_METERING_EM	(EM_PULSE_STATES_START + 0x13)
#define  FLASH_DTCT_OGT_EM_PULSE    (EM_PULSE_STATES_START + 0x14)
#define  FLASH_DTCT_ICT_EM_PULSE    (EM_PULSE_STATES_START + 0x15)
#define  EM_FAS 		(EM_PULSE_STATES_START + 0x16)
#define  INIT_GAURD		(EM_PULSE_STATES_START + 0x17)
#define  LOCAL_BLOCK		(EM_PULSE_STATES_START + 0x18)
#define  AWAIT_1ST_DGT_EM	(EM_PULSE_STATES_START + 0x19)
#if ((defined TRANSIT_EM) || (defined TRANSIT_CAS1))
#define  ACK_INPUT_CLF		(EM_PULSE_STATES_START + 0x1a)
#define  TALK_INPUT_CLF 	(EM_PULSE_STATES_START + 0x1b)
#endif
// HOT_STANDBY
#define  STD_CONNECT_RINGING	(EM_PULSE_STATES_START + 0x1c)

// HOT_STANDBY
#define  EM_PULSE_STATES_END	(EM_PULSE_STATES_START + 0x1c)
#define  EM_PULSE_STATES	(EM_PULSE_STATES_END - EM_PULSE_STATES_START + 1)

#else
#define  EM_PULSE_STATES	0
#endif


#define  EM_CONTINUOUS_STATES_START	(EM_STATES_START + EM_PULSE_STATES)

#ifdef EM_CONTINUOUS_SIGNALING
#define  AWAIT_SEIZE_ACK_EM_CONT	EM_CONTINUOUS_STATES_START
#define  SEIZE_ACK_EM_CONT		(EM_CONTINUOUS_STATES_START + 1)
#define  AWAIT_ANSWER_EM_CONT		(EM_CONTINUOUS_STATES_START + 2)
#define  ANSWER_EM_CONT 		(EM_CONTINUOUS_STATES_START + 3)
#define  EXT_TALK_EM_CONT		(EM_CONTINUOUS_STATES_START + 4)
#define  FLASH_DTCT_EM_CONT		(EM_CONTINUOUS_STATES_START + 5)
#define  AWAIT_EM_CONT_DEST_1ST_DGT	(EM_CONTINUOUS_STATES_START + 6)
#define  AWAIT_EM_CONT_TRUNK_GROUP	(EM_CONTINUOUS_STATES_START + 7)
#define  EM_CONT_BLOCK			(EM_CONTINUOUS_STATES_START + 8)
#define  AWAIT_EM_CONT_EXT_NUM		(EM_CONTINUOUS_STATES_START + 9)
#define  AWAIT_EM_CONT_OPR_NUM		(EM_CONTINUOUS_STATES_START + 0x0a)
#define  AWAIT_EM_CONT_CLF		(EM_CONTINUOUS_STATES_START + 0x0b)
#define  EM_CONT_EXT_RINGING		(EM_CONTINUOUS_STATES_START + 0x0c)
#define  EM_CONT_TALK_EXT		(EM_CONTINUOUS_STATES_START + 0x0d)
#define  OPR_AWAIT_SEIZE_ACK_EM_CONT	(EM_CONTINUOUS_STATES_START + 0x0e)
#define  OPR_SEIZE_ACK_EM_CONT		(EM_CONTINUOUS_STATES_START + 0x0f)
#define  OPR_ANSWER_EM_CONT		(EM_CONTINUOUS_STATES_START + 0x10)
#define  OPR_TALK_EM_CONT		(EM_CONTINUOUS_STATES_START + 0x11)
#define  EM_TRUNK_TALK			(EM_CONTINUOUS_STATES_START + 0x12)
#define  EM_CONT_AWAIT_SEIZE_ACK_EM_CONT (EM_CONTINUOUS_STATES_START + 0x13)
#define  EM_CONT_SEIZE_ACK_EM_CONT	(EM_CONTINUOUS_STATES_START + 0x14)
#define  EM_CONT_AWAIT_ANSWER_EM_CONT	(EM_CONTINUOUS_STATES_START + 0x15)
#define  EM_CONT_ANSWER_EM_CONT 	(EM_CONTINUOUS_STATES_START + 0x16)

#define  EM_CONTINUOUS_STATES_END	(EM_CONTINUOUS_STATES_START + 0x16)
#define  EM_CONTINUOUS_STATES		(EM_CONTINUOUS_STATES_END - EM_CONTINUOUS_STATES_START + 1)

#else
#define  EM_CONTINUOUS_STATES	0
#endif


#define  NO_EM_STATES		(EM_PULSE_STATES + EM_CONTINUOUS_STATES)
#define  CAS3_STATES_START	(EM_STATES_START + NO_EM_STATES)

#define  EM_OPEN		0x4f
/* if changed at operator side,EM_OPEN must be changed */

#else
#define  NO_EM_STATES		0
#define  CAS3_STATES_START	EM_STATES_START
#endif
/**-----------------------------------------------------------------------**/
